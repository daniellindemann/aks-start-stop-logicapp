{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "1143186785082783566"
    }
  },
  "parameters": {
    "servicePrincipalClientId": {
      "type": "string",
      "metadata": {
        "description": "Id of the service principal that executes the Azure actions"
      }
    },
    "servicePrincipalClientSecret": {
      "type": "secureString",
      "metadata": {
        "description": "Secret of the service principal that executes the Azure actions"
      }
    },
    "timeZone": {
      "type": "string",
      "defaultValue": "W. Europe Standard Time",
      "metadata": {
        "description": "Timezone the logic app works with (see https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones)"
      }
    },
    "recurrenceStartDate": {
      "type": "string",
      "defaultValue": "[utcNow('yyyy-MM-dd')]",
      "metadata": {
        "description": "Start date of the Logic Apps to check the AKS clusters"
      }
    },
    "defaultBusinessHourDays": {
      "type": "string",
      "defaultValue": "Mon,Tue,Wed,Thu,Fri",
      "metadata": {
        "description": "Days to check for business hours"
      }
    },
    "defaultTagBusinessHoursDays": {
      "type": "string",
      "defaultValue": "Business Hours Days",
      "metadata": {
        "description": "Azure tag to check for business hour days on an AKS resource"
      }
    },
    "defaultTagBusinessHoursEnd": {
      "type": "string",
      "defaultValue": "Business Hours End",
      "metadata": {
        "description": "Azure tag to check for business hours end on an AKS resource"
      }
    },
    "defaultTagBusinessHoursStart": {
      "type": "string",
      "defaultValue": "Business Hours Start",
      "metadata": {
        "description": "Azure tag to check for business hours start on an AKS resource"
      }
    }
  },
  "functions": [],
  "variables": {
    "location": "[resourceGroup().location]",
    "subscriptionId": "[subscription().id]",
    "tenantId": "[subscription().tenantId]",
    "suffix": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
    "reccurenceIntervalMinutes": 15,
    "resourceTags": {
      "Version": "1.0.0",
      "Subscription": "[subscription().subscriptionId]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[format('con-arm-{0}', variables('suffix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('resourceTags')]",
      "properties": {
        "displayName": "[format('con-arm-{0}', variables('suffix'))]",
        "parameterValues": {
          "token:clientId": "[parameters('servicePrincipalClientId')]",
          "token:clientSecret": "[parameters('servicePrincipalClientSecret')]",
          "token:TenantId": "[variables('tenantId')]",
          "token:grantType": "client_credentials"
        },
        "api": {
          "id": "[format('{0}/providers/Microsoft.Web/locations/{1}/managedApis/arm', variables('subscriptionId'), variables('location'))]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[format('la-aks-start-{0}', variables('suffix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('resourceTags')]",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/schemas/2016-06-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "DefaultBusinessHourDays": {
              "defaultValue": "[parameters('defaultBusinessHourDays')]",
              "type": "String"
            },
            "DefaultTagBusinessHoursDays": {
              "defaultValue": "[parameters('defaultTagBusinessHoursDays')]",
              "type": "String"
            },
            "DefaultTagBusinessHoursEnd": {
              "defaultValue": "[parameters('defaultTagBusinessHoursEnd')]",
              "type": "String"
            },
            "DefaultTagBusinessHoursStart": {
              "defaultValue": "[parameters('defaultTagBusinessHoursStart')]",
              "type": "String"
            },
            "TimeZone": {
              "defaultValue": "[parameters('timeZone')]",
              "type": "String"
            }
          },
          "triggers": {
            "Recurrence": {
              "evaluatedRecurrence": {
                "frequency": "Minute",
                "interval": "[variables('reccurenceIntervalMinutes')]",
                "startTime": "[format('{0}T00:00:02Z', parameters('recurrenceStartDate'))]",
                "timeZone": "[parameters('timeZone')]"
              },
              "recurrence": {
                "frequency": "Minute",
                "interval": "[variables('reccurenceIntervalMinutes')]",
                "startTime": "[format('{0}T00:00:02Z', parameters('recurrenceStartDate'))]",
                "timeZone": "[parameters('timeZone')]"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Current_time_UTC": {
              "inputs": {},
              "kind": "CurrentTime",
              "runAfter": {},
              "type": "Expression"
            },
            "For_each_AKS_cluster": {
              "actions": {
                "Condition": {
                  "actions": {
                    "AKS_Id_info": {
                      "inputs": "@split(body('Parse_AKS_data')?['id'], '/')",
                      "runAfter": {},
                      "type": "Compose"
                    },
                    "Check_if_AKS_cluster_should_be_started": {
                      "actions": {
                        "Start_AKS_cluster": {
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['arm']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/subscriptions/@{encodeURIComponent(outputs('AKS_Id_info')[2])}/resourcegroups/@{encodeURIComponent(outputs('AKS_Id_info')[4])}/providers/@{encodeURIComponent(outputs('AKS_Id_info')[6])}/@{encodeURIComponent(outputs('AKS_Id_info')[7],'/',outputs('AKS_Id_info')[8])}/@{encodeURIComponent('start')}",
                            "queries": {
                              "x-ms-api-version": "2021-05-01"
                            }
                          },
                          "runAfter": {},
                          "type": "ApiConnection"
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greaterOrEquals": [
                              "@body('Local_time')",
                              "@formatDateTime(body('Current_time_UTC'), concat('yyyy-MM-ddT', outputs('Get_Business_Hours_Start'), ':00Z'))"
                            ]
                          },
                          {
                            "less": [
                              "@body('Local_time')",
                              "@formatDateTime(body('Current_time_UTC'), concat('yyyy-MM-ddT', outputs('Get_Business_Hours_End'), ':00Z'))"
                            ]
                          },
                          {
                            "contains": [
                              "@outputs('Get_Business_Hours_Days')",
                              "@outputs('Current_day')"
                            ]
                          },
                          {
                            "not": {
                              "equals": [
                                "@outputs('Get_Power_state')",
                                "Running"
                              ]
                            }
                          },
                          {
                            "equals": [
                              "@outputs('Get_Provisioning_state')",
                              "Succeeded"
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "Get_Provisioning_state": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "Get_AKS_resource": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['arm']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/subscriptions/@{encodeURIComponent(outputs('AKS_Id_info')[2])}/resourcegroups/@{encodeURIComponent(outputs('AKS_Id_info')[4])}/providers/@{encodeURIComponent(outputs('AKS_Id_info')[6])}/@{encodeURIComponent(outputs('AKS_Id_info')[7],'/',outputs('AKS_Id_info')[8])}",
                        "queries": {
                          "x-ms-api-version": "2021-05-01"
                        }
                      },
                      "runAfter": {
                        "AKS_Id_info": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Get_Power_state": {
                      "inputs": "@body('Get_AKS_resource')?['properties']?['powerState']?['code']",
                      "runAfter": {
                        "Get_AKS_resource": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose"
                    },
                    "Get_Provisioning_state": {
                      "inputs": "@body('Get_AKS_resource')?['properties']?['provisioningState']",
                      "runAfter": {
                        "Get_Power_state": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose"
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@outputs('Get_Business_Hours_Start')",
                            "@null"
                          ]
                        }
                      },
                      {
                        "not": {
                          "equals": [
                            "@outputs('Get_Business_Hours_End')",
                            "@null"
                          ]
                        }
                      }
                    ]
                  },
                  "runAfter": {
                    "Current_day": [
                      "Succeeded"
                    ]
                  },
                  "type": "If"
                },
                "Current_day": {
                  "inputs": "@formatDateTime(body('Local_time'), 'ddd')",
                  "runAfter": {
                    "Get_Business_Hours_Days": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Get_Business_Hours_Days": {
                  "inputs": "@coalesce(body('Parse_AKS_data')?['tags']?[parameters('DefaultTagBusinessHoursDays')], parameters('DefaultBusinessHourDays'))",
                  "runAfter": {
                    "Get_Business_Hours_End": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Get_Business_Hours_End": {
                  "inputs": "@body('Parse_AKS_data')?['tags']?[parameters('DefaultTagBusinessHoursEnd')]",
                  "runAfter": {
                    "Get_Business_Hours_Start": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Get_Business_Hours_Start": {
                  "inputs": "@body('Parse_AKS_data')?['tags']?[parameters('DefaultTagBusinessHoursStart')]",
                  "runAfter": {
                    "Parse_AKS_data": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Parse_AKS_data": {
                  "inputs": {
                    "content": "@items('For_each_AKS_cluster')",
                    "schema": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "tags": {
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "runAfter": {},
                  "type": "ParseJson"
                }
              },
              "foreach": "@body('Get_AKS_Clusters_in_subscription')?['value']",
              "runAfter": {
                "Get_AKS_Clusters_in_subscription": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_AKS_Clusters_in_subscription": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['arm']['connectionId']"
                  }
                },
                "method": "get",
                "path": "[format('{0}/resources', variables('subscriptionId'))]",
                "queries": {
                  "$filter": "resourceType eq 'Microsoft.ContainerService/managedClusters'",
                  "x-ms-api-version": "2016-06-01"
                }
              },
              "runAfter": {
                "Local_time": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection"
            },
            "Local_time": {
              "inputs": {
                "baseTime": "@body('Current_time_UTC')",
                "destinationTimeZone": "@parameters('TimeZone')",
                "formatString": "o",
                "sourceTimeZone": "UTC"
              },
              "kind": "ConvertTimeZone",
              "runAfter": {
                "Current_time_UTC": [
                  "Succeeded"
                ]
              },
              "type": "Expression"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "arm": {
                "connectionId": "[resourceId('Microsoft.Web/connections', format('con-arm-{0}', variables('suffix')))]",
                "connectionName": "[format('con-arm-{0}', variables('suffix'))]",
                "id": "[reference(resourceId('Microsoft.Web/connections', format('con-arm-{0}', variables('suffix')))).api.id]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', format('con-arm-{0}', variables('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[format('la-aks-stop-{0}', variables('suffix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('resourceTags')]",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/schemas/2016-06-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "DefaultBusinessHourDays": {
              "defaultValue": "[parameters('defaultBusinessHourDays')]",
              "type": "String"
            },
            "DefaultTagBusinessHoursDays": {
              "defaultValue": "[parameters('defaultTagBusinessHoursDays')]",
              "type": "String"
            },
            "DefaultTagBusinessHoursEnd": {
              "defaultValue": "[parameters('defaultTagBusinessHoursEnd')]",
              "type": "String"
            },
            "DefaultTagBusinessHoursStart": {
              "defaultValue": "[parameters('defaultTagBusinessHoursStart')]",
              "type": "String"
            },
            "TimeZone": {
              "defaultValue": "[parameters('timeZone')]",
              "type": "String"
            }
          },
          "triggers": {
            "Recurrence": {
              "evaluatedRecurrence": {
                "frequency": "Minute",
                "interval": "[variables('reccurenceIntervalMinutes')]",
                "startTime": "[format('{0}T00:00:02Z', parameters('recurrenceStartDate'))]",
                "timeZone": "[parameters('timeZone')]"
              },
              "recurrence": {
                "frequency": "Minute",
                "interval": "[variables('reccurenceIntervalMinutes')]",
                "startTime": "[format('{0}T00:00:02Z', parameters('recurrenceStartDate'))]",
                "timeZone": "[parameters('timeZone')]"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Current_time_UTC": {
              "inputs": {},
              "kind": "CurrentTime",
              "runAfter": {},
              "type": "Expression"
            },
            "For_each_AKS_cluster": {
              "actions": {
                "Condition": {
                  "actions": {
                    "AKS_Id_info": {
                      "inputs": "@split(body('Parse_AKS_data')?['id'], '/')",
                      "runAfter": {},
                      "type": "Compose"
                    },
                    "Check_if_AKS_cluster_should_be_stopped": {
                      "actions": {
                        "Stop_AKS_cluster": {
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['arm']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/subscriptions/@{encodeURIComponent(outputs('AKS_Id_info')[2])}/resourcegroups/@{encodeURIComponent(outputs('AKS_Id_info')[4])}/providers/@{encodeURIComponent(outputs('AKS_Id_info')[6])}/@{encodeURIComponent(outputs('AKS_Id_info')[7],'/',outputs('AKS_Id_info')[8])}/@{encodeURIComponent('stop')}",
                            "queries": {
                              "x-ms-api-version": "2021-05-01"
                            }
                          },
                          "runAfter": {},
                          "type": "ApiConnection"
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "or": [
                              {
                                "greaterOrEquals": [
                                  "@body('Local_time')",
                                  "@formatDateTime(body('Current_time_UTC'), concat('yyyy-MM-ddT', outputs('Get_Business_Hours_End'), ':00Z'))"
                                ]
                              },
                              {
                                "less": [
                                  "@body('Local_time')",
                                  "@formatDateTime(body('Current_time_UTC'), concat('yyyy-MM-ddT', outputs('Get_Business_Hours_Start'), ':00Z'))"
                                ]
                              }
                            ]
                          },
                          {
                            "contains": [
                              "@outputs('Get_Business_Hours_Days')",
                              "@outputs('Current_day')"
                            ]
                          },
                          {
                            "not": {
                              "equals": [
                                "@outputs('Get_Power_state')",
                                "Stopped"
                              ]
                            }
                          },
                          {
                            "equals": [
                              "@outputs('Get_Provisioning_state')",
                              "Succeeded"
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "Get_Provisioning_state": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "Get_AKS_resource": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['arm']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/subscriptions/@{encodeURIComponent(outputs('AKS_Id_info')[2])}/resourcegroups/@{encodeURIComponent(outputs('AKS_Id_info')[4])}/providers/@{encodeURIComponent(outputs('AKS_Id_info')[6])}/@{encodeURIComponent(outputs('AKS_Id_info')[7],'/',outputs('AKS_Id_info')[8])}",
                        "queries": {
                          "x-ms-api-version": "2021-05-01"
                        }
                      },
                      "runAfter": {
                        "AKS_Id_info": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Get_Power_state": {
                      "inputs": "@body('Get_AKS_resource')?['properties']?['powerState']?['code']",
                      "runAfter": {
                        "Get_AKS_resource": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose"
                    },
                    "Get_Provisioning_state": {
                      "inputs": "@body('Get_AKS_resource')?['properties']?['provisioningState']",
                      "runAfter": {
                        "Get_Power_state": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose"
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@outputs('Get_Business_Hours_Start')",
                            "@null"
                          ]
                        }
                      },
                      {
                        "not": {
                          "equals": [
                            "@outputs('Get_Business_Hours_End')",
                            "@null"
                          ]
                        }
                      }
                    ]
                  },
                  "runAfter": {
                    "Current_day": [
                      "Succeeded"
                    ]
                  },
                  "type": "If"
                },
                "Current_day": {
                  "inputs": "@formatDateTime(body('Local_time'), 'ddd')",
                  "runAfter": {
                    "Get_Business_Hours_Days": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Get_Business_Hours_Days": {
                  "inputs": "@coalesce(body('Parse_AKS_data')?['tags']?[parameters('DefaultTagBusinessHoursDays')], parameters('DefaultBusinessHourDays'))",
                  "runAfter": {
                    "Get_Business_Hours_End": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Get_Business_Hours_End": {
                  "inputs": "@body('Parse_AKS_data')?['tags']?[parameters('DefaultTagBusinessHoursEnd')]",
                  "runAfter": {
                    "Get_Business_Hours_Start": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Get_Business_Hours_Start": {
                  "inputs": "@body('Parse_AKS_data')?['tags']?[parameters('DefaultTagBusinessHoursStart')]",
                  "runAfter": {
                    "Parse_AKS_data": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Parse_AKS_data": {
                  "inputs": {
                    "content": "@items('For_each_AKS_cluster')",
                    "schema": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "tags": {
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "runAfter": {},
                  "type": "ParseJson"
                }
              },
              "foreach": "@body('Get_AKS_Clusters_in_subscription')?['value']",
              "runAfter": {
                "Get_AKS_Clusters_in_subscription": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_AKS_Clusters_in_subscription": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['arm']['connectionId']"
                  }
                },
                "method": "get",
                "path": "[format('{0}/resources', variables('subscriptionId'))]",
                "queries": {
                  "$filter": "resourceType eq 'Microsoft.ContainerService/managedClusters'",
                  "x-ms-api-version": "2016-06-01"
                }
              },
              "runAfter": {
                "Local_time": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection"
            },
            "Local_time": {
              "inputs": {
                "baseTime": "@body('Current_time_UTC')",
                "destinationTimeZone": "@parameters('TimeZone')",
                "formatString": "o",
                "sourceTimeZone": "UTC"
              },
              "kind": "ConvertTimeZone",
              "runAfter": {
                "Current_time_UTC": [
                  "Succeeded"
                ]
              },
              "type": "Expression"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "arm": {
                "connectionId": "[resourceId('Microsoft.Web/connections', format('con-arm-{0}', variables('suffix')))]",
                "connectionName": "[format('con-arm-{0}', variables('suffix'))]",
                "id": "[reference(resourceId('Microsoft.Web/connections', format('con-arm-{0}', variables('suffix')))).api.id]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', format('con-arm-{0}', variables('suffix')))]"
      ]
    }
  ],
  "outputs": {
    "connection_arm_id": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/connections', format('con-arm-{0}', variables('suffix')))]"
    },
    "connection_type_id": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/connections', format('con-arm-{0}', variables('suffix')))).api.id]"
    }
  }
}